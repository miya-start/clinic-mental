---
import { getImage } from 'astro:assets';
import backgroundImage from '~/assets/images/hero-bg.jpg';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
}

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
} = Astro.props;

const optimizedBackground = await getImage({
  src: backgroundImage,
  format: 'webp',
});
---

<section class="not-prose relative" {...id ? { id } : {}}>
  <div
    class="pointer-events-none absolute inset-0 bg-cover bg-center after:absolute after:inset-0 after:bg-white/10 after:bg-cover after:bg-center"
    style=`background-image: url(${optimizedBackground.src}) ;`
    aria-hidden="true"
  >
  </div>
  <div class="relative mx-auto max-w-7xl px-4 sm:px-6">
    <div class="pointer-events-none pt-0 md:pt-[76px]"></div>
    <div class="py-12 md:py-20">
      <div class="mx-auto max-w-5xl pb-10 text-center md:pb-16">
        {tagline && <p class="text-base font-bold uppercase tracking-wide text-secondary" set:html={tagline} />}
        {
          title && (
            <h1
              class="palt mb-4 font-serif text-5xl font-bold tracking-tighter md:text-6xl"
              style="text-shadow: 0 0 10px #fff, 0 0 20px #fff;"
              set:html={title}
            />
          )
        }
        <div class="mx-auto max-w-3xl text-left md:text-center">
          {
            subtitle && (
              <p
                class="mb-6 text-xl"
                style="text-shadow: 0 0 2px #fff, 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #fff;"
                set:html={subtitle}
              />
            )
          }
        </div>
        {content && <Fragment set:html={content} />}
      </div>
    </div>
  </div>
</section>
